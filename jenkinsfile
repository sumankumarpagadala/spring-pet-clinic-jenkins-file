node ('maven') {
    stage ('cloning source code'){
    //pulling source code from git
    git 'https://github.com/sumankumarpagadala/spring-petclinic.git'
    }
    stage ('building package'){
        //packaging
        sh 'mvn clean package'
    }
    stage ('archiving artifacts'){
        //archiving artifacts
        archive 'webapp/target/*.war'
    }
	stage('making a build directory'){
		sh 'mkdir -p $JOB_NAME/$BUILD_NUMBER'
	}
	stage ('coying war file to build directory') {
		sh 'cp /home/jenkins/workspace/$JOB_NAME/webapp/target/*.war /home/jenkins/workspace/$JOB_NAME/$BUILD_NUMBER'
	}
    stage ('logs'){
        //logs
        junit allowEmptyResults: true, testResults: 'webapp/target/surefire-reports/*.xml'
    }
	stage('SonarQube analysis') {
		// performing sonarqube analysis with "withSonarQubeENV(<Name of Server configured in Jenkins>)"
    withSonarQubeEnv('sonarqube.lab.com') {
       // requires SonarQube Scanner for Maven 3.2+
      sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
	}
   }
}
node ('chefnode') {
	stage('deploying application'){
		sh 'chef-client'
	}
def remote = [:]
remote.name = "maven"
remote.host = "192.168.1.6"
remote.user = 'root'
remote.password = 'p@55w0rd'
remote.allowAnyHosts = true
	stage ('copying war file to webapps'){
		writeFile file: 'openmrs.war', text: '..'
        sshGet remote: remote, from: '/home/jenkins/workspace/OPENMRS-BUILD-PACKAGE-PIPELINE-SCRIPT/$JOB_NAME/$BUILD_NUMBER/openmrs.war', into: '/opt/tomcat/latest/webapps/openmrs.war', override: true
   }
}